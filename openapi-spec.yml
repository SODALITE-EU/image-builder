openapi: 3.0.1
info:
  title: SODALITE Image Builder REST API
  description: RESTful tool for building docker images
  version: 1.0.0
paths:
  /build/:
    post:
      summary: Request building image
      operationId: post_build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildParams'
        required: true
      responses:
        202:
          description: Build invocation accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingStarted'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: string

  /status/{invocation_id}:
    get:
      summary: check status
      operationId: get_status
      parameters:
      - name: invocation_id
        in: path
        description: Id of image-building Invocation
        required: true
        schema:
          type: string
      responses:
        200:
          description: Invocation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        404:
          description: Invocation not found
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    BuildParams:
      required:
        - source
        - target
      type: object
      description: Parameters for building docker images
      properties:
        source:
          description: Source of docker image
          type: object
          properties:
            git_repo:
              type: object
              description: Definition of git repository with code and Dockerfile
              allOf:
                - $ref: '#/components/schemas/GitRepo'
            dockerfile:
              type: object
              description: Definition of dockerfile
              allOf:
                - $ref: '#/components/schemas/Dockerfile'
            build_context:
              type: object
              description: Optional context. Could be used together with dockerfile.
              allOf:
                - $ref: '#/components/schemas/BuildContext'
        target:
          description: Target for image-building process
          type: object
          allOf:
            - $ref: '#/components/schemas/Target'
    Dockerfile:
      required:
        - url
      type: object
      description:
      properties:
        url:
          type: string
          description: Url to dockerfile
        username:
          type: string
          description: Username for dockerfile
        password:
          type: string
          description: Password for dockerfile

    GitRepo:
      required:
        - url
      type: object
      description: Repository with code and dockerfile
      properties:
        url:
          type: string
          description: Url to git repository
        version:
          type: string
          description: Version of repository. Could be branch name, tag name or HEAD.
          default: HEAD
        username:
          type: string
          description: Username for git repository
        password:
          type: string
          description: Password for git repository
        workdir:
          type: string
          description: Docker build workdir, relative to git repo's root dir
          default: .
        dockerfile:
          type: string
          description: Path to dockerfile inside repository
          default: Dockerfile
    BuildContext:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: Url to git repo with build context
        username:
          type: string
          description: Username for git
        password:
          type: string
          description: Password for git
        subdir:
          type: string
          description: Path to subdirectory within parent where build will be run
    Target:
      required:
        - images
      type: object
      properties:
        images:
          type: array
          description: List of target images and tags
          minItems: 1
          items:
            $ref: '#/components/schemas/DockerImage'
        platforms:
          type: array
          description: List of platforms to build for
          default: [ 'linux/amd64' ]
          items:
            $ref: '#/components/schemas/Platforms'
    DockerImage:
      required:
      - image
      - tag
      type: object
      properties:
        image:
          type: string
          description: Desired docker image name
          example: image-builder
        tag:
          type: string
          description: Desired docker image tag
          example: latest
        base:
          type: string
          description: Desired base image to build on
          example: python:3.8.8
    Platforms:
      type: string
      enum:
        - linux/amd64
        - linux/386
        - linux/arm64
        - linux/ppc64le
        - linux/s390x
        - linux/arm/v7
        - linux/arm/v6
    BuildingStarted:
      description: Object with invocation_id
      type: object
      required:
        - invocation_id
      properties:
        invocation_id:
          description: Id of image-building job
          type: string
          format: uuid
    Invocation:
      description: An invocation of image builder.
      type: object
      required:
        - invocation_id
        - state
        - timestamp_submission
      properties:
        invocation_id:
          description: Id of image-building job
          type: string
          format: uuid
        state:
          $ref: "#/components/schemas/InvocationState"
        timestamp_submission:
          description: An ISO8601 timestamp of submission of invocation.
          type: string
          format: date-time
        timestamp_start:
          description: An ISO8601 timestamp of start of image-building
          type: string
          format: date-time
        timestamp_end:
          description: An ISO8601 timestamp of end of image-building
          type: string
          format: date-time
        build_params:
          $ref: "#/components/schemas/BuildParams"
        response:
          description: Stactrace in case of failure
          type: string
    InvocationState:
      type: string
      enum:
        - pending
        - in_progress
        - success
        - failed
