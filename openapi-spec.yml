openapi: 3.0.1
info:
  title: SODALITE Image Builder REST API
  description: RESTful tool for building docker images
  version: 1.0.0
paths:
  /build/:
    post:
      summary: Request building image
      operationId: post_build
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BuildParams'
        required: true
      responses:
        202:
          description: Build invocation accepted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BuildingStarted'
        400:
          description: Bad request
          content:
            application/json:
              schema:
                type: string

  /status/{invocation_id}:
    get:
      summary: check status
      operationId: get_status
      parameters:
      - name: invocation_id
        in: path
        description: Id of image-building Invocation
        required: true
        schema:
          type: string
      responses:
        200:
          description: Invocation found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Invocation'
        404:
          description: Invocation not found
          content:
            application/json:
              schema:
                type: string
components:
  schemas:
    BuildParams:
      required:
      - source_type
      type: object
      properties:
        source_type:
          $ref: '#/components/schemas/SourceType'
        source_url:
          type: string
          description: Url to source (if source_type == dockerfile)
        source_username:
          type: string
          description: Username for source (if source_type == dockerfile)
        source_password:
          type: string
          description: Password for source (if source_type == dockerfile)
        build_context:
          type: object
          description: Optional build context, if source_type == dockerfile
          allOf:
          - $ref: '#/components/schemas/GitBuildContext'
        source_repo:
          type: object
          description: Git repository with dockerile and app code (if source_type == git)
          allOf:
          - $ref: '#/components/schemas/GitRepo'
        target_image_name:
          type: string
          description: desired docker image name
        target_image_tag:
          type: string
          description: desired docker image tag
          default: latest
        target_images:
          type: array
          description: List of image variants to build
          items:
            $ref: '#/components/schemas/ImageVariantContext'
    GitRepo:
      required:
        - url
      type: object
      properties:
        url:
          type: string
          description: Url to git repository
        version:
          type: string
          description: Version of repository. Could be branch name, tag name or HEAD.
          default: HEAD
        username:
          type: string
          description: Username for git repository
        password:
          type: string
          description: Password for git repository
        workdir:
          type: string
          description: Docker build workdir, relative to git repo's root dir
          default: .
        dockerfile:
          type: string
          description: Path to dockerfile inside repository
          default: Dockerfile
    GitBuildContext:
      required:
      - url
      type: object
      properties:
        url:
          type: string
          description: Url to git repo with build context
        username:
          type: string
          description: Username for git
        password:
          type: string
          description: Password for git
        subdir:
          type: string
          description: Path to subdirectory within parent where build will be run
    ImageVariantContext:
      required:
      - image
      - tag
      type: object
      properties:
        image:
          type: string
          description: Desired docker image name
        tag:
          type: string
          description: Desired docker image tag
        base:
          type: string
          description: Desired base image to build on
    BuildingStarted:
      description: Object with invocation_id
      type: object
      required:
        - invocation_id
      properties:
        invocation_id:
          description: Id of image-building job
          type: string
          format: uuid
    Invocation:
      description: An invocation of image builder.
      type: object
      required:
        - invocation_id
        - state
        - timestamp_submission
      properties:
        invocation_id:
          description: Id of image-building job
          type: string
          format: uuid
        state:
          $ref: "#/components/schemas/InvocationState"
        timestamp_submission:
          description: An ISO8601 timestamp of submission of invocation.
          type: string
          format: date-time
        timestamp_start:
          description: An ISO8601 timestamp of start of image-building
          type: string
          format: date-time
        timestamp_end:
          description: An ISO8601 timestamp of end of image-building
          type: string
          format: date-time
        build_params:
          $ref: "#/components/schemas/BuildParams"
        response:
          description: Stactrace in case of failure
          type: string
    InvocationState:
      type: string
      enum:
        - pending
        - in_progress
        - success
        - failed
    SourceType:
      type: string
      enum:
        - dockerfile
        - git
