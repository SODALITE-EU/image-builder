{
    "swagger": "2.0",
    "basePath": "/",
    "paths": {
        "/auth/login": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "user login",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/auth_details"
                        }
                    }
                ],
                "security": [],
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/logout": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "logout a user",
                "tags": [
                    "auth"
                ]
            }
        },
        "/auth/test": {
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "Test authentication",
                "tags": [
                    "auth"
                ]
            }
        },
        "/build/": {
            "post": {
                "responses": {
                    "202": {
                        "description": "Build job accepted"
                    }
                },
                "summary": "Request building image",
                "operationId": "Post build job",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/build_params"
                        }
                    }
                ],
                "security": [],
                "tags": [
                    "build"
                ]
            }
        },
        "/info/log/{session_token}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Token of image-building session",
                    "name": "session_token",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "Logfile not found"
                    },
                    "200": {
                        "description": "Success"
                    }
                },
                "summary": "check log",
                "operationId": "check log of image building job",
                "security": [],
                "tags": [
                    "info"
                ]
            }
        },
        "/info/status/{session_token}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "Token of image-building session",
                    "name": "session_token",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "500": {
                        "description": "Job failed"
                    },
                    "202": {
                        "description": "Building"
                    },
                    "201": {
                        "description": "Success"
                    }
                },
                "summary": "check status",
                "operationId": "check status of image building job",
                "security": [],
                "tags": [
                    "info"
                ]
            }
        },
        "/user/": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/user"
                            }
                        }
                    }
                },
                "summary": "List all registered users",
                "operationId": "list_of_registered_users",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "user"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "User successfully created."
                    }
                },
                "summary": "Creates a new User",
                "operationId": "create a new user",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                ],
                "security": [],
                "tags": [
                    "user"
                ]
            }
        },
        "/user/{public_id}": {
            "parameters": [
                {
                    "in": "path",
                    "description": "The User identifier",
                    "name": "public_id",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "404": {
                        "description": "User not found."
                    },
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/user"
                        }
                    }
                },
                "summary": "get a user given its identifier",
                "operationId": "get a user",
                "parameters": [
                    {
                        "name": "X-Fields",
                        "in": "header",
                        "type": "string",
                        "format": "mask",
                        "description": "An optional fields mask"
                    }
                ],
                "tags": [
                    "user"
                ]
            }
        }
    },
    "info": {
        "title": "SODALITE image builder REST API",
        "version": "0.3.0",
        "description": "RESTful tool for building docker images"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "Bearer token": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization"
        }
    },
    "security": [
        {
            "Bearer token": []
        }
    ],
    "tags": [
        {
            "name": "user",
            "description": "user related operations"
        },
        {
            "name": "auth",
            "description": "authentication related operations"
        },
        {
            "name": "build",
            "description": "building docker images"
        },
        {
            "name": "info",
            "description": "Info about jobs"
        }
    ],
    "definitions": {
        "user": {
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "user email address"
                },
                "username": {
                    "type": "string",
                    "description": "user username"
                },
                "password": {
                    "type": "string",
                    "description": "user password"
                },
                "public_id": {
                    "type": "string",
                    "description": "user Identifier"
                }
            },
            "type": "object"
        },
        "auth_details": {
            "required": [
                "email",
                "password"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "description": "The email address"
                },
                "password": {
                    "type": "string",
                    "description": "The user password "
                }
            },
            "type": "object"
        },
        "build_params": {
            "required": [
                "source_type",
                "source_url"
            ],
            "properties": {
                "source_type": {
                    "type": "string",
                    "description": "\"Dockerfile\" or \"tar\""
                },
                "source_url": {
                    "type": "string",
                    "description": "url of Dockerfile or tar"
                },
                "source_username": {
                    "type": "string",
                    "description": "username for Dockerfile or tar"
                },
                "source_password": {
                    "type": "string",
                    "description": "password for Dockerfile or tar"
                },
                "build_context": {
                    "description": "Build context, if building from Dockerfile",
                    "allOf": [
                        {
                            "$ref": "#/definitions/git_build_context"
                        }
                    ]
                },
                "target_image_name": {
                    "type": "string",
                    "description": "desired docker image name"
                },
                "target_image_tag": {
                    "type": "string",
                    "description": "desired docker image tag",
                    "default": "latest"
                },
                "target_images": {
                    "type": "array",
                    "description": "List of image variants to build",
                    "items": {
                        "$ref": "#/definitions/image_variant_context"
                    }
                }
            },
            "type": "object"
        },
        "git_build_context": {
            "required": [
                "dir_name",
                "url"
            ],
            "properties": {
                "dir_name": {
                    "type": "string",
                    "description": "name of dir, where build context content will be saved, relative to Dockerfile"
                },
                "subdir": {
                    "type": "string",
                    "description": "path to subdirectory within parent where build will be run"
                },
                "url": {
                    "type": "string",
                    "description": "Git url"
                },
                "username": {
                    "type": "string",
                    "description": "username for git"
                },
                "password": {
                    "type": "string",
                    "description": "password for git"
                }
            },
            "type": "object"
        },
        "image_variant_context": {
            "required": [
                "image",
                "tag"
            ],
            "properties": {
                "image": {
                    "type": "string",
                    "description": "desired docker image name"
                },
                "tag": {
                    "type": "string",
                    "description": "desired docker image tag"
                },
                "base": {
                    "type": "string",
                    "description": "desired base image to build on"
                }
            },
            "type": "object"
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        }
    }
}
